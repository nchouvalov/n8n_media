#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/check-readiness.sh

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ${NC} $1"
        return 0
    else
        echo -e "${RED}‚ùå${NC} $1 - –ù–ï –ù–ê–ô–î–ï–ù"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
check_content() {
    if grep -q "$2" "$1" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ${NC} $1 —Å–æ–¥–µ—Ä–∂–∏—Ç '$2'"
        return 0
    else
        echo -e "${RED}‚ùå${NC} $1 –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç '$2'"
        return 1
    fi
}

# –°—á–µ—Ç—á–∏–∫–∏
total_checks=0
passed_checks=0

echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
check_file "package.json" && ((passed_checks++)) || true
((total_checks++))

check_file "README.md" && ((passed_checks++)) || true
((total_checks++))

check_file ".gitignore" && ((passed_checks++)) || true
((total_checks++))

check_file "env.example" && ((passed_checks++)) || true
((total_checks++))

check_file "LICENSE" && ((passed_checks++)) || true
((total_checks++))

check_file "Dockerfile" && ((passed_checks++)) || true
((total_checks++))

check_file "docker-compose.yml" && ((passed_checks++)) || true
((total_checks++))

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
check_file ".eslintrc.js" && ((passed_checks++)) || true
((total_checks++))

check_file ".prettierrc" && ((passed_checks++)) || true
((total_checks++))

check_file ".lintstagedrc.js" && ((passed_checks++)) || true
((total_checks++))

check_file ".dockerignore" && ((passed_checks++)) || true
((total_checks++))

echo ""
echo "üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
check_file "CONTRIBUTING.md" && ((passed_checks++)) || true
((total_checks++))

check_file "SECURITY.md" && ((passed_checks++)) || true
((total_checks++))

check_file "CHANGELOG.md" && ((passed_checks++)) || true
((total_checks++))

check_file "DEPLOYMENT.md" && ((passed_checks++)) || true
((total_checks++))

check_file "GITHUB_SETUP.md" && ((passed_checks++)) || true
((total_checks++))

echo ""
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
check_content ".gitignore" "\.env" && ((passed_checks++)) || true
((total_checks++))

check_content ".gitignore" "node_modules" && ((passed_checks++)) || true
((total_checks++))

check_content ".gitignore" "logs" && ((passed_checks++)) || true
((total_checks++))

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ .env –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è
if [ -f ".env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è${NC} .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"
else
    echo -e "${GREEN}‚úÖ${NC} .env —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∏–∑ env.example)"
fi

echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
if [ -d "data" ]; then
    echo -e "${GREEN}‚úÖ${NC} –ü–∞–ø–∫–∞ data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    check_file "data/cache/.gitkeep" && ((passed_checks++)) || true
    ((total_checks++))
    check_file "data/downloads/.gitkeep" && ((passed_checks++)) || true
    ((total_checks++))
    check_file "data/analytics/.gitkeep" && ((passed_checks++)) || true
    ((total_checks++))
else
    echo -e "${RED}‚ùå${NC} –ü–∞–ø–∫–∞ data –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

if [ -d "logs" ]; then
    echo -e "${GREEN}‚úÖ${NC} –ü–∞–ø–∫–∞ logs —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    check_file "logs/.gitkeep" && ((passed_checks++)) || true
    ((total_checks++))
else
    echo -e "${RED}‚ùå${NC} –ü–∞–ø–∫–∞ logs –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

echo ""
echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ CI/CD..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub Actions
if [ -d ".github/workflows" ]; then
    echo -e "${GREEN}‚úÖ${NC} GitHub Actions –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    check_file ".github/workflows/ci.yml" && ((passed_checks++)) || true
    ((total_checks++))
else
    echo -e "${YELLOW}‚ö†Ô∏è${NC} GitHub Actions –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
if [ -d ".github/ISSUE_TEMPLATE" ]; then
    echo -e "${GREEN}‚úÖ${NC} –®–∞–±–ª–æ–Ω—ã Issues –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    check_file ".github/ISSUE_TEMPLATE/bug_report.md" && ((passed_checks++)) || true
    ((total_checks++))
    check_file ".github/ISSUE_TEMPLATE/feature_request.md" && ((passed_checks++)) || true
    ((total_checks++))
else
    echo -e "${YELLOW}‚ö†Ô∏è${NC} –®–∞–±–ª–æ–Ω—ã Issues –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
fi

check_file ".github/PULL_REQUEST_TEMPLATE.md" && ((passed_checks++)) || true
((total_checks++))

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo ""

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "–ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $passed_checks –∏–∑ $total_checks"

if [ $passed_checks -eq $total_checks ]; then
    echo -e "${GREEN}üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub!${NC}"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/init-git.sh"
    echo "2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub"
    echo "3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ GITHUB_SETUP.md"
else
    echo -e "${YELLOW}‚ö†Ô∏è${NC} –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π."
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã"
    echo "- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .gitignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
fi

echo ""
echo "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "- README.md - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
echo "- GITHUB_SETUP.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ"
echo "- DEPLOYMENT.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é" 